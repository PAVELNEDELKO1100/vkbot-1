/* jshint esversion: 6 */
const ping = require('./ping');

const pkg = require('./package');
const tc = require('./timeconvert');
const cooldown = new Map();

const mysql = require('mysql2');
const config = require('config-yml');
const Rcon = require('modern-rcon');
const request = require('request');
const VK = require('node-vk-bot-api');
const execute = require('executive');

const db = mysql.createConnection(config.mysql);
db.connect(function(err) {
  if(err) {
  const log4js = require('log4js');
        log4js.configure({
        appenders: { database: { type: 'file', filename: './logs/mysql.log' } },
        categories: { default: { appenders: ['database'], level: 'error' } }
        });
  const logger = log4js.getLogger('database');
  logger.error(err);
  console.error("[!] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î.");
  process.exit();
}
  else return console.info("[!] –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î.");
});

const server1 = new Rcon(config.rcon.server1.host, port = config.rcon.server1.port, config.rcon.server1.pass);
const server2 = new Rcon(config.rcon.server2.host, port = config.rcon.server1.port, config.rcon.server2.pass);
const server3 = new Rcon(config.rcon.server3.host, port = config.rcon.server1.port, config.rcon.server3.pass);
const server4 = new Rcon(config.rcon.server4.host, port = config.rcon.server1.port, config.rcon.server4.pass);
const server5 = new Rcon(config.rcon.server5.host, port = config.rcon.server1.port, config.rcon.server5.pass);
const server6 = new Rcon(config.rcon.server6.host, port = config.rcon.server1.port, config.rcon.server6.pass);

const bot = new VK(config.vk);

bot.on(function(ctx) {
    var user = String(ctx.message.user_id || ctx.message.from_id);

    let donatstatus;
    db.query("SELECT * FROM rcon WHERE userid = ?", [user], (err, res) => {
      if(err) throw err;
      if(res.length < 1) { db.query("INSERT INTO rcon (userid) VALUES (?)", [user]); return; }
      donatstatus = res[0].accesslevel;

    const prfx = config.prefix;
  const message = ctx.message.body || ctx.message.text;
  const slicer = message.slice(prfx.length);
  if(message.indexOf(prfx) !== 0) return;
  const args = slicer.split(' ');
  const command = args.shift().toLowerCase();

  if(command === "help") {
  let chooseddonatstatus;
  if(donatstatus === "0") chooseddonatstatus = `${config.groups.player}`;
  if(donatstatus === "1") chooseddonatstatus = `${config.groups.donate}`;
  if(donatstatus === "2") chooseddonatstatus = `${config.groups.admin}`;

  let modecontrol;
  if(donatstatus === "1" || donatstatus === "2") modecontrol = `üí• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞–º–∏:`;
  let modelist;
  if(donatstatus === "1" || donatstatus === "2") modelist = `üî• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ - ${config.prefix}cmd`;
  let modesend;
  if(donatstatus === "1" || donatstatus === "2") modesend = `üî• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É - ${config.prefix}cmd [—Å–µ—Ä–≤–µ—Ä] [–∫–æ–º–∞–Ω–¥–∞]`;

  let admincommands;
  if(donatstatus === "2") admincommands = `üöÄ –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:`;
  let giveadmaccess;
  if(donatstatus === "2") giveadmaccess = `‚õî –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–æ—Ç–µ - ${config.prefix}giveadmaccess`;
  let giveaccess;
  if(donatstatus === "2") giveaccess = `üî• –í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É - ${config.prefix}giveaccess`;
  let remaccess;
  if(donatstatus === "2") remaccess = `üî• –ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É - ${config.prefix}remaccess`;
  let remuser;
  if(donatstatus === "2") remuser = `üî• –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î - ${config.prefix}remuser`;
  let logs;
  if(donatstatus === "2") logs = `üî• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥-—Ñ–∞–π–ª—ã –±–æ—Ç–∞ - ${config.prefix}logs`;
  let clearlogs;
  if(donatstatus === "2") clearlogs = `üî• –£–¥–∞–ª–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª—ã –±–æ—Ç–∞ - ${config.prefix}clearlogs`;
  let vdscontrol;
  if(donatstatus === "2") vdscontrol = `üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º (VDS):`;
  let sendcommand;
  if(donatstatus === "2") sendcommand = `üî• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É - ${config.prefix}send`;
  let vdsuptime;
  if(donatstatus === "2") vdsuptime = `üî• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã - ${config.prefix}uptime`;
  let vdsnmap;
  if(donatstatus === "2") vdsnmap = `üî• –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã - ${config.prefix}nmap [IP]`;
  let version;
  if(donatstatus === "2") version = `üî• –£–∑–Ω–∞—Ç—å –≤–µ—Ä—Å–∏—é —Å–∏—Å—Ç–µ–º—ã - ${config.prefix}version`;
  let users;
  if(donatstatus === "2") users = `üî• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - ${config.prefix}users`;
  let activeusers;
  if(donatstatus === "2") activeusers = `üî• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π - ${config.prefix}activeusers`;
  
  let webcontrol;
  if(donatstatus === "2") webcontrol = `üçÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–º:`;
  let webstart;
  if(donatstatus === "2") webstart = `üî• –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±—Å–µ—Ä–≤–µ—Ä - ${config.prefix}webstart`;
  let webstop;
  if(donatstatus === "2") webstop = `üî• –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Å–µ—Ä–≤–µ—Ä - ${config.prefix}webstop`;
  let webkill;
  if(donatstatus === "2") webkill = `üî• –ê–≤–∞—Ä–∏–π–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±—Å–µ—Ä–≤–µ—Ä - ${config.prefix}webkill`;
  
  

  let cw = cooldown.get(`${user}-srv1`);
  if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
  if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        ctx.reply(`
‚ö° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤:

üî• –ö—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç - ${config.prefix}donate
üî• –ö–∞–∫ –∑–∞–π—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä - ${config.prefix}join
üî• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ - ${config.prefix}ping
üî• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ - ${config.prefix}ip
üî• –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å - ${config.prefix}genpass

ü§£ –§–∞–Ω-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤:

üî• –£–∑–Ω–∞—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å –∏–Ω—Ñ—ã - ${config.prefix}–∏–Ω—Ñ–∞
üî• –£–∑–Ω–∞—Ç—å, –¥–∞ –∏–ª–∏ –Ω–µ—Ç - ${config.prefix}–≤–∞—Ä–∏–∞–Ω—Ç

${modecontrol || ""}

${modelist || ""}
${modesend || ""}

${vdscontrol || ""}

${sendcommand || ""}
${vdsuptime || ""}
${vdsnmap || ""}
${version || ""}

${users || ""}
${activeusers || ""}

${webcontrol || ""}

${webstart || ""}
${webstop || ""}
${webkill || ""}

${admincommands || ""}

${logs || ""}
${clearlogs || ""}

${giveaccess || ""}
${remaccess || ""}
${remuser || ""}

üîí –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞:

üî• –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∫ –í–ö - –ü—Ä–∏–≤—è–∑–∞—Ç—å
üî• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å

‚ú≥ –í–∞—à –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É: ${chooseddonatstatus}

${giveadmaccess || ""}

üåç –°–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è!
        `);
    }
  if(command === "kick") {      
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
        let id = args[0];
        if(!id) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
    let chatid = String(ctx.message.peer_id);
        let chatidrel = chatid.replace('200000000', '');
        let chatiddone = Number(chatidrel);
    bot.execute("messages.getConversationMembers", { peer_id: 1 }, { group_id: 156372234 }, (result) => {
      console.log(result.is_admin)
    });
    bot.execute("utils.resolveScreenName", { screen_name: id }, (result) => {
      var numberid = result.object_id
    bot.execute("messages.removeChatUser", { user_id: numberid, chat_id: chatiddone }, (result) => {
      if(result == false) ctx.reply(`error`)
          console.log(result)
          });
        });
  }
  if(command === "info") {
    let cw = cooldown.get(`${user}-srv1`);
    if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
    if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        ctx.reply(`
‚úçÔ∏è –ö–æ–¥–µ—Ä—ã: [id179175035|–í–ª–∞–¥] –∏ [id391812762|–ê–ª–µ–∫—Å–µ–π]

‚ÑπÔ∏è –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: ${config.version}

üôè –î–∞–Ω–Ω—ã–π –±–æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ ${config.information.name}
        `);
    }
  if(command === "donate") {
    let cw = cooldown.get(`${user}-srv1`);
    if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
    if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        ctx.reply(`
‚ö° –î–æ–Ω–∞—Ç –ø–æ–∫—É–ø–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–π—Ç–µ: ${config.information.site}
        `);
    }
  if(command === "join") {
    let cw = cooldown.get(`${user}-srv1`);
    if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
    if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        ctx.reply(`
‚ö° IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ${config.information.ip}
        `);
    }
    if(command === "ping") {
      let cw = cooldown.get(`${user}-srv1`);
      if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
      if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        let addr = args[0];
        if(!addr) return ctx.reply('‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ IP —Å–µ—Ä–≤–µ—Ä–∞.');
        let port = args[1];
        if(!port) {
            ping(addr, 25565, function(err, res) {
                if(err) return ctx.reply(`
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.
–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç, –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
`);
                ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

üî• –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: ${res.server_name}
üî• –í–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞: ${res.minecraft_version}
üî• –ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${res.num_players}/${res.max_players}
üî• –í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: ${res.protocol_version}
üî• –ü–æ–ª–Ω—ã–π IP —Å–µ—Ä–≤–µ—Ä–∞: ${addr}:25565

‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ—Ä—Ç, –ø–æ—ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø–æ—Ä—Ç–æ–º (25565).
                `);
            }, 3000);
        } else {
          let cw = cooldown.get(`${user}-srv1`);
          if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
          if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
            ping(addr, port, function(err, res) {
                if(err) return ctx.reply(`
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.
–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç, –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
`);
                ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

üî• –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: ${res.server_name}
üî• –í–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞: ${res.minecraft_version}
üî• –ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${res.num_players}/${res.max_players}
üî• –í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: ${res.protocol_version}
üî• –ü–æ–ª–Ω—ã–π IP —Å–µ—Ä–≤–µ—Ä–∞: ${addr}:${port}
                `);
            }, 3000);
        }
    }
    if(command === "ip") {
      let cw = cooldown.get(`${user}-srv1`);
      if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
      if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        let addrsite = args.join(" ");
        if(!addrsite) return ctx.reply("‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ IP/–¥–æ–º–µ–Ω.");
        request(`http://ip-api.com/json/${addrsite}`, { json: true }, (err, res, body) => {
          if(body.status === "fail") return ctx.reply("‚ùå –î–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
ctx.reply(`
‚ö° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ${addrsite}:

üî• –ê–π–ø–∏: ${body.query}
üî• –°—Ç—Ä–∞–Ω–∞: ${body.country}
üî• –†–µ–≥–∏–æ–Ω: ${body.regionName}
üî• –ì–æ—Ä–æ–¥: ${body.city}
üî• –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${body.isp}
üî• –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${body.org}
üî• –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${body.timezone}
üî• ZIP: ${body.zip || "–ù–µ —É–∫–∞–∑–∞–Ω"}
`);
      //console.log(body);
        });
    }
    if(command === "–≤–∞—Ä–∏–∞–Ω—Ç") {
      let cw = cooldown.get(`${user}-srv1`);
      if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
      if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
         if(!args[0]) return ctx.reply(`‚ö† –í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç.`);
         else {
         let choosed;
         var chtest = Math.floor(Math.random() * (2 - 1)) + 1;
         if(chtest === 1) choosed === "–¥–∞";
         else choosed = "–Ω–µ—Ç";
         return ctx.reply(`‚ö° –Ø –¥—É–º–∞—é —á—Ç–æ ${choosed}.`);
    }
  }
    if(command === "–∏–Ω—Ñ–∞") {
      let cw = cooldown.get(`${user}-srv1`);
      if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
      if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
        if(!args[0]) return ctx.reply(`‚ö† –í—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç.`);
        else return ctx.reply(`‚ö° –≠—Ç–æ —Ç–æ—á–Ω–æ –Ω–∞ ${Math.floor(Math.random() * (100 - 1)) + 1}%`);
    }
    if(command === "remuser") {
        if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
        let useridforaccess = args[0];
        if(!useridforaccess) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
        if(useridforaccess.includes('179175035') || useridforaccess.includes('391812762')) return ctx.reply(`‚ùå –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –∑–∞—â–∏—Ç—É.`);

        db.query("DELETE * FROM rcon WHERE userid = ?", [useridforaccess], (e, r) => {
        if(e) return ctx.reply(`‚ùå –î–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
        return ctx.reply(`‚ö° –ò–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id${useridforaccess}`);
     });
    }
    if(command === "giveaccess") {
        if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
        let useridforaccess = args[0];
        if(!useridforaccess) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
        if(useridforaccess.includes('179175035') || useridforaccess.includes('391812762')) return ctx.reply(`‚ùå –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –∑–∞—â–∏—Ç—É.`);

        db.query("SELECT * FROM rcon WHERE userid = ?", [useridforaccess], (e, r) => {
          if(e) throw e;
          if(r.length < 1) { db.query("INSERT INTO rcon (userid) VALUES (?)", [useridforaccess]); return ctx.reply(`‚ö° –í –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id${useridforaccess}\n\n‚ö° –î–ª—è –≤—ã–¥–∞—á–∏ –ø—Ä–∞–≤, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.`); }
          else { db.query("UPDATE rcon SET accesslevel = '1' WHERE userid = ?", [useridforaccess]); return ctx.reply(`‚ö° –î–æ—Å—Ç—É–ø –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id${useridforaccess}`); }
        });
    }
    if(command === "giveadmaccess") {
        if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
        let useridforaccess = args[0];
        if(!useridforaccess) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
        if(useridforaccess.includes('179175035') || useridforaccess.includes('391812762')) return ctx.reply(`‚ùå –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –∑–∞—â–∏—Ç—É.`);

        db.query("SELECT * FROM rcon WHERE userid = ?", [useridforaccess], (e, r) => {
          if(e) throw e;
          if(r.length < 1) { db.query("INSERT INTO rcon (userid) VALUES (?)", [useridforaccess]); return; }
          else { db.query("UPDATE rcon SET accesslevel = '2' WHERE userid = ?", [useridforaccess]); return ctx.reply(`‚ö° –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id${useridforaccess}`); }
        });
    }
    if(command === "remaccess") {
        if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
        let useridforaccess = args[0];
        if(!useridforaccess) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`);
        if(useridforaccess.includes('179175035') || useridforaccess.includes('391812762')) return ctx.reply(`‚ùå –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –∑–∞—â–∏—Ç—É.`);

        db.query("SELECT * FROM rcon WHERE userid = ?", [useridforaccess], (e, r) => {
          if(e) throw e;
          if(r.length < 1) { db.query("INSERT INTO rcon (userid) VALUES (?)", [useridforaccess]); return; }
          else { db.query("UPDATE rcon SET accesslevel = '0' WHERE userid = ?", [useridforaccess]); return ctx.reply(`‚ö° –î–æ—Å—Ç—É–ø –æ—Ç–æ–±—Ä–∞–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @id${useridforaccess}`); }
        });
    }

    if(command === "cmd") {
        let chooseddonatstatus;
        if(donatstatus === "0") chooseddonatstatus = `${config.groups.player}`;
        if(donatstatus === "1") chooseddonatstatus = `${config.groups.donate}`;
        if(donatstatus === "2") chooseddonatstatus = `${config.groups.admin}`;

        let servers;
        if(donatstatus === "2") servers = `üî• –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞: ${config.rcon.server1.name}, ${config.rcon.server2.name}, ${config.rcon.server3.name}, ${config.rcon.server4.name}, ${config.rcon.server5.name}, ${config.rcon.server6.name}`;
        if(donatstatus === "1") servers = `üî• –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞: ${config.rcon.server1.name}, ${config.rcon.server2.name}, ${config.rcon.server3.name}`;
        if(donatstatus === "0") servers = "üî• –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞: –Ω–µ—Ç";

        if(!args[0] || args[0] === "") return ctx.reply(`
üí• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞–º–∏:

üî• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: ${config.prefix + command} [—Å–µ—Ä–≤–µ—Ä] [–∫–æ–º–∞–Ω–¥–∞]

${servers}

‚ú≥ –í–∞—à —Å—Ç–∞—Ç—É—Å: ${chooseddonatstatus}
            `);
        if(args[0] === "status") {
                return ctx.reply(`‚ú≥ –í–∞—à —Å—Ç–∞—Ç—É—Å: ${chooseddonatstatus}`)
            }
        if(args[0] === "servers") {
            if(donatstatus === "2") return ctx.reply(`
‚ö° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞: sb, surv, prc, bungee, auth, lobby

‚ú≥ –í–∞—à —Å—Ç–∞—Ç—É—Å: ${chooseddonatstatus}
`);
            if(donatstatus === "1") return ctx.reply(`
‚ö° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞: sb, surv, prc

‚ú≥ –í–∞—à —Å—Ç–∞—Ç—É—Å: ${chooseddonatstatus}
`);
        if(args[0] === `${config.rcon.server1.name}`) {
            if(donatstatus < "1") return ctx.reply(`${config.errors.admin}`);
            const log4js = require('log4js');
              log4js.configure({
                appenders: { server1: { type: 'file', filename: './logs/commands.log' } },
                categories: { default: { appenders: ['server1'], level: 'info' } }
              });
            const logger = log4js.getLogger('server1');
            var consolestring = args.slice(1).join(" ");
            var currentdate = Date.now;
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            let cw = cooldown.get(`${user}-srv1`);
            if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);

            server1.connect().then(() => {
                logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return server1.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return rcon.disconnect();
            });
        }
        if(args[0] === `${config.rcon.server2.name}`) {
            if(donatstatus < "1") return ctx.reply(`${config.errors.admin}`);
            const log4js = require('log4js');
                log4js.configure({
                  appenders: { server2: { type: 'file', filename: './logs/commands.log' } },
                  categories: { default: { appenders: ['server2'], level: 'info' } }
                });
            const logger = log4js.getLogger('server2');
            var consolestring = args.slice(1).join(" ");
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            let cw = cooldown.get(`${user}-srv1`);
            if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);

            server2.connect().then(() => {
              logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return server2.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return server2.disconnect();
            });
        }
        if(args[0] === `${config.rcon.server3.name}`) {
            if(donatstatus < "1") return ctx.reply(`${config.errors.admin}`);
            const log4js = require('log4js');
                  log4js.configure({
                    appenders: { server3: { type: 'file', filename: './logs/commands.log' } },
                    categories: { default: { appenders: ['server3'], level: 'info' } }
                  });
            const logger = log4js.getLogger('server3');
            var consolestring = args.slice(1).join(" ");
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            let cw = cooldown.get(`${user}-srv1`);
            if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);

            server3.connect().then(() => {
              logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return server3.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return server3.disconnect();
            });
        }

        if(args[0] === `${config.rcon.server4.name}`) {
            if(donatstatus === "0") return ctx.reply(`${config.errors.donate}`);
            if(donatstatus === "1") return ctx.reply(`${config.errors.server}`);

            const log4js = require('log4js');
                  log4js.configure({
                    appenders: { server4: { type: 'file', filename: './logs/commands.log' } },
                    categories: { default: { appenders: ['server4'], level: 'info' } }
                  });
            const logger = log4js.getLogger('server4');
            var consolestring = args.slice(1).join(" ");
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            // if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            // let cw = cooldown.get(user);
            // if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            // if(status !== true) cooldown.set(user, Date.now() + 1000 * 900);

            server4.connect().then(() => {
              logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return server4.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return bungee.disconnect();
            });
        }
        if(args[0] === "auth") {
            if(donatstatus === "0") return ctx.reply(`${config.errors.donate}`);
            if(donatstatus === "1") return ctx.reply(`${config.errors.server}`);

            const log4js = require('log4js');
                  log4js.configure({
                    appenders: { Auth: { type: 'file', filename: './logs/commands.log' } },
                    categories: { default: { appenders: ['Auth'], level: 'info' } }
                  });
            const logger = log4js.getLogger('Auth');
            var consolestring = args.slice(1).join(" ");
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            // if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            // let cw = cooldown.get(user);
            // if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            // if(status !== true) cooldown.set(user, Date.now() + 1000 * 900);

            auth.connect().then(() => {
              logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return auth.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return auth.disconnect();
            });
        }
        if(args[0] === "lobby") {
            if(donatstatus === "0") return ctx.reply(`${config.errors.donate}`);
            if(donatstatus === "1") return ctx.reply(`${config.errors.server}`);

            const log4js = require('log4js');
                  log4js.configure({
                    appenders: { Lobby: { type: 'file', filename: './logs/commands.log' } },
                    categories: { default: { appenders: ['Lobby'], level: 'info' } }
                  });
            const logger = log4js.getLogger('Lobby');
            var consolestring = args.slice(1).join(" ");
            if(!consolestring) return ctx.reply(`‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É.`);
            // if(consolestring.includes('sudo') || consolestring.includes('pex') || consolestring.includes('op') || consolestring.includes('deop') || consolestring.includes('stop') || consolestring.includes('restart') || consolestring.includes('reload') || consolestring.includes('save-off') || consolestring.includes('save-on') || consolestring.includes('save-all')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

            // let cw = cooldown.get(user);
            // if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
            // if(status !== true) cooldown.set(user, Date.now() + 1000 * 900);

            lobby.connect().then(() => {
              logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
                // console.info(`Authed to ${config.rcon.host}:${config.rcon.port}`);
                return lobby.send(consolestring);
            }).then(res => {
              let otvet = res.replace(/¬ß./g, '');
ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${otvet || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
`);
            }).then(() => {
                // console.info(`Command has been sended. Disconnecting..\n`);
                return lobby.disconnect();
            });
        }
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è:
    if(command === "genpass") {
      let cw = cooldown.get(`${user}-srv1`);
      if(cw !== undefined && (cw - Date.now()) / 1000 > 0) return ctx.reply(`‚ùå –í–æ—É-–≤–æ—É! –ü–æ–ª–µ–≥—á–µ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ ${tc((cw - Date.now()) / 1000 | 0)} —á—Ç–æ–±—ã –¥–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É!`);
      if(donatstatus < "2") cooldown.set(`${user}-srv1`, Date.now() + 1000 * 60);
      if(!args[0]) return ctx.reply(`‚ö† –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 6 –¥–æ 20`);
      else {
         let length = args[0];
         let dict = `${config.genpass.dict}`;
         for(var i = 0; i < 18; i++){
         let gen1 = dict.charAt(Math.floor(Math.random() * dict.length));
         let gen2 = gen1 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen3 = gen2 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen4 = gen3 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen5 = gen4 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen6 = gen5 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen7 = gen6 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen8 = gen7 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen9 = gen8 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen10 = gen9 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen11 = gen10 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen12 = gen11 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen13 = gen12 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen14 = gen13 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen15 = gen14 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen16 = gen15 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen17 = gen16 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen18 = gen17 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen19 = gen18 + dict.charAt(Math.floor(Math.random() * dict.length));
         let gen20 = gen19 + dict.charAt(Math.floor(Math.random() * dict.length));

         if(length === "6") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen6}`);
         if(length === "7") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen7}`);
         if(length === "8") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen8}`);
         if(length === "9") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen9}`);
         if(length === "10") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen10}`);
         if(length === "11") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen11}`);
         if(length === "12") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen12}`);
         if(length === "13") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen13}`);
         if(length === "14") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen14}`);
         if(length === "15") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen15}`);
         if(length === "16") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen16}`);
         if(length === "17") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen17}`);
         if(length === "18") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen18}`);
         if(length === "19") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen19}`);
         if(length === "20") return ctx.reply(`‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${gen20}`);
       }
    }
  }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–µ—Ä—Å–∏–∏ –û–° –Ω–∞ VDS:
    if(command === "version") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('lsb_release -a', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
       let otvet = res.replace('Distributor ID', 'üî• –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤');
       let otvet1 = otvet.replace('Description', 'üî• –û–ø–∏—Å–∞–Ω–∏–µ');
       let otvet2 = otvet1.replace('Release', 'üî• –í–µ—Ä—Å–∏—è');
       let otvet3 = otvet2.replace('Codename', 'üî• –ö–æ–¥–æ–≤–æ–µ –∏–º—è');
       ctx.reply(`${otvet3 || "‚ö† –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è."}`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –±–µ—Å–ø–µ—Ä–µ—Ä—ã–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã VDS:
    if(command === "uptime") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('uptime', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.`);
       let otvet = res.replace(' up', ', –±–µ—Å–ø–µ—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ -');
       let otvet1 = otvet.replace('days', '–¥–Ω–µ–π');
       let otvet2 = otvet1.replace('day', '–¥–µ–Ω—å');
       let otvet3 = otvet2.replace('min', '–º–∏–Ω—É—Ç');
       let otvet4 = otvet3.replace('user', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
       let otvet5 = otvet4.replace('users', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
       let otvet6 = otvet5.replace('load average', '—Å—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞');
       ctx.reply(`üî• –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è - ${otvet6}`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–æ–≤ —á–µ—Ä–µ–∑ nmap:
    if(command === "nmap") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
       var ip = args.join(" ");
       if(!ip) return ctx.reply("‚ö† –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ IP —Å–µ—Ä–≤–µ—Ä–∞.");

       execute("nmap " + ip, (err, res, body) => {
       if(err) return ctx.reply(`‚ö† –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è.`);
       let otvet = res.replace('Starting Nmap', '–ó–∞–ø—É—Å–∫–∞–µ–º Nmap –≤–µ—Ä—Å–∏–∏');
       let otvet1 = otvet.replace('( https://nmap.org ) at', '');
       let otvet2 = otvet1.replace('Note: Host seems down. If it is really up, but blocking our ping probes, try -Pn', '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
       let otvet3 = otvet2.replace('Nmap scan report for', '–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ');
       let otvet4 = otvet3.replace('Host is up', '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
       let otvet5 = otvet4.replace('s latency', ' —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏');
       let otvet6 = otvet5.replace('Other addresses for', '–û—Å—Ç–∞–ª—å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ');
       let otvet7 = otvet6.replace('not scanned', '–Ω–µ —Å–∫–∞–Ω–∏—Ä—É—é—Ç—Å—è');
       let otvet8 = otvet7.replace('Not shown:', '–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è');
       let otvet9 = otvet8.replace('closed ports', '–∑–∞–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤');
       let otvet10 = otvet9.replace('PORT', ' ');
       let otvet11 = otvet10.replace('STATE', ' ');
       let otvet12 = otvet11.replace('SERVICE', ' ');
       let otvet13 = otvet12.replace('Nmap done', '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
       let otvet14 = otvet13.replace('addresses', '–∞–¥—Ä–µ—Å–æ–≤');
       let otvet15 = otvet14.replace('address', '–∞–¥—Ä–µ—Å');
       let otvet16 = otvet15.replace('hosts up', '—Ö–æ—Å—Ç–æ–≤');
       let otvet17 = otvet16.replace('host up', '—Ö–æ—Å—Ç');
       let otvet18 = otvet17.replace('scanned in', '—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω –∑–∞');
       let otvet19 = otvet18.replace('seconds', '—Å–µ–∫—É–Ω–¥');
       ctx.reply(`${otvet19 || "‚ö† –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è."}`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ VDS:
    if(command === "users") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute(`sed 's/:.*//' /etc/passwd`, (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.`);
       ctx.reply(`
‚ö° –ù–∏–∂–µ –≤—ã–≤–µ–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
  
${res || "‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."}
`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ VDS:
    if(command === "activeusers") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('who', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.`);
       ctx.reply(`
‚ö° –ù–∏–∂–µ –≤—ã–≤–µ–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π:

${res || "‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."}
`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ apache2:
    if(command === "webstart") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('systemctl start apache2', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
       ctx.reply(`‚úî –í–µ–±-—Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ apache2:
    if(command === "webstop") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('systemctl stop apache2', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
       ctx.reply(`‚úî –í–µ–±-—Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤ RCON:
    if(command === "clearlogs") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('cd logs && rm -rf commands.log', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –§–∞–π–ª–∞ —Å –ª–æ–≥–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
       ctx.reply(`‚úî –õ–æ–≥-—Ñ–∞–π–ª—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.`);
     });
    }
    //–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ RCON:
    if(command === "logs") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);

       execute('cd logs && cat commands.log', (err, res, body) => {
       if(err) return ctx.reply(`‚ùå –§–∞–π–ª–∞ —Å –ª–æ–≥–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`);
       ctx.reply(`${res || "‚ö† –í –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏."}`);
     });
    }
    //–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ VDS:
    /*if(command === "send") {
    if(donatstatus < "2") return ctx.reply(`${config.errors.donate}`);
    const log4js = require('log4js');
              log4js.configure({
                appenders: { VDS: { type: 'file', filename: './logs/send.log' } },
                categories: { default: { appenders: ['VDS'], level: 'info' } }
        });
        const logger = log4js.getLogger('VDS');
        var consolestring = args.join(" ");
        if(!consolestring) return ctx.reply("‚ö† –ù–µ —É–∫–∞–∑–∞–Ω –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è");
    if(consolestring.includes('user') || consolestring.includes('add')) return ctx.reply(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.`);

        execute(consolestring, (err, res, body) => {
      logger.info(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É ${consolestring}`);
            if(err) return ctx.reply(`
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã:

${err || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
            `);
            ctx.reply(`
‚ö° –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.

${res || "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."}
            `);
        });*/
    }
    });
});

bot.startPolling(() => console.info('[!] –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'));
